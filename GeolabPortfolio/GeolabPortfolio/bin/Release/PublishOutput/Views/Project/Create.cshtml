@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

@using GeolabPortfolio.ViewModels
@using GeolabPortfolio.Models;

@model CreateProjectViewModel

@{
    List<string> list = new List<string>();
    foreach (ModelState modelState in ViewData.ModelState.Values)
    {
        foreach (ModelError error in modelState.Errors)
        {
            list.Add(error.ErrorMessage);
        }
    }
}

<div class="card mb-3">
    <div class="card-header">
        <i class="fas fa-table"></i>
        ახალი პროექტი
    </div>
    <div class="card-body">
        <div class="col-md-12">
            <form action="~/Project/Create" method="post" enctype="multipart/form-data">
                
                @if (list.Count > 0)
                {
                    <ul class="alert alert-danger">
                        @foreach (var item in list)
                        {
                            <li>@item</li>
                        }
                    </ul>
                }

                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label for="inputEmail4">ავტორი</label>
                        <select class="form-control" name="AuthorId">
                            @foreach (var author in Model.Authors)
                            {
                                if (Model.AuthorId == author.Id)
                                {
                                    <option value="@author.Id" selected>@author.FirstName @author.LastName</option>
                                }
                                else
                                {
                                    <option value="@author.Id">@author.FirstName @author.LastName</option>
                                }
                            }
                        </select>
                        @Html.ValidationMessageFor(x => x.AuthorId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label for="inputEmail4">სახელი</label>
                        <input type="text" class="form-control" name="Name" placeholder="სახელი" value="@Model.Name">
                        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label for="inputEmail4">აღწერა</label>
                        <textarea class="form-control" name="Description" id="editor">@Model.Description</textarea>
                        @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        <label for="inputEmail4">თეგები</label>
                    </div>
                    @foreach (Tag tag in Model.Tags)
                    {
                        <div class="form-group col-md-3">
                            <label><input type="checkbox" name="TagIds[]" value="@tag.Id"> @tag.Name</label>
                        </div>
                    }
                </div>

                <div class="form-row">
                    <div class="form-group col-md-12">
                        <button type="button" class="btn btn-info btn-sm" onclick="makeNewUploadInput()">ახალი სურათი</button>
                    </div>
                </div>

                <div id="FileUploadGroup"></div>
                @Html.ValidationMessageFor(x => x.Photos, "", new { @class = "text-danger" })

                <div class="form-group btn-group-sm" style="margin-top:20px;">
                    <input type="submit" class="btn btn-success btn-lg" value="შენახვა" />
                </div>
            </form>
        </div>

    </div>
</div>

<!--editor configuration-->
<script src="~/Scripts/ckeditor.js"></script>

<script type="text/javascript">
    var counter = 0;
    var selected = 0;
    var cnt = 0;

    //editor configuration
    ClassicEditor
        .create(document.querySelector('#editor'))
        .catch(error => {
            console.error(error);
        });

    function radioClick(index) {
        selected = index;
 //       alert(index);
    }

    function makeNewUploadInput(e) {
        var div = document.createElement('DIV');

        div.innerHTML = `
            <input id = "file` + cnt + `" name = "Photos" type="file" onchange="return fileValidation('file` + counter + `')"/>
            <input type="radio" name="Primary" id="radio`+ cnt + `" value=` + cnt + ` onclick="radioClick(` + cnt + `)"> მთავარი სურათად ჩვენება`;

        document.getElementById("FileUploadGroup").appendChild(div);

        if (selected != -1) {
            var item = document.getElementById("radio" + selected);
            item.checked = true;
        }
        cnt++;
    }

    function fileValidation(filename) {
        var fileInput = document.getElementById(filename);
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg|\.jpeg|\.png|\.gif)$/i;
        if (!allowedExtensions.exec(filePath)) {
            alert('არასწორია ფაილის ფორმატი');
            fileInput.value = '';
            return false;
        } else {
            //Image preview
            if (fileInput.files && fileInput.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('imagePreview').innerHTML = '<img src="' + e.target.result + '"/>';
                };
                reader.readAsDataURL(fileInput.files[0]);
            }
        }
    }
</script>
